<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FontFamily x:Key="FontAwesome">pack://application:,,,/Frontend_UBB_SE_2024_Gabornment;component/Fonts/#Font Awesome 6 Free Solid</FontFamily>

	<!--Search Bar-->
	<SolidColorBrush x:Key="SearchBarTextBox.Static.Border" Color="DarkGray"/>
	<SolidColorBrush x:Key="SearchBarTextBox.MouseOver.Border" Color="Transparent"/>
	<SolidColorBrush x:Key="SearchBarTextBox.Focus.Border" Color="Transparent"/>
	<Style x:Key="SearchBarStyle" TargetType="{x:Type TextBox}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource SearchBarTextBox.Static.Border}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
						<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="border" Value="0.56"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SearchBarTextBox.MouseOver.Border}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SearchBarTextBox.Focus.Border}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
					<Condition Property="IsSelectionActive" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
			</MultiTrigger>
		</Style.Triggers>
	</Style>


	<!--Menu Button-->
	<Style x:Key="MenuButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="MenuButton.Static.Background" Color="Transparent"/>
	<SolidColorBrush x:Key="MenuButton.Static.Border" Color="Transparent"/>
	<SolidColorBrush x:Key="MenuButton.MouseOver.Background" Color="Transparent"/>
	<SolidColorBrush x:Key="MenuButton.MouseOver.Text" Color="Gray"/>
	<SolidColorBrush x:Key="MenuButton.Disabled.Background" Color="Transparent"/>
	<SolidColorBrush x:Key="MenuButton.Disabled.Border" Color="Transparent"/>
	<SolidColorBrush x:Key="MenuButton.Disabled.Foreground" Color="Transparent"/>


	<Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource MenuButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource MenuButton.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource MenuButton.Static.Border}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<ContentPresenter.Style>
								<Style TargetType="{x:Type ContentPresenter}">
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="TextElement.Foreground" Value="LightGray"/>
										</Trigger>
									</Style.Triggers>
								</Style>
							</ContentPresenter.Style>
						</ContentPresenter>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Button.IsDefaulted" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="TextElement.Foreground" Value="{StaticResource MenuButton.MouseOver.Text}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="border" Value="{StaticResource MenuButton.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MenuButton.Disabled.Border}"/>
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource MenuButton.Disabled.Foreground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Friend Menu Button-->
	<Style x:Key="FriendMenuButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="NavigationButton.Static.Background" Color="#FFDDDDDD"/>
	<SolidColorBrush x:Key="NavigationButton.Static.Border" Color="Transparent"/>
	<SolidColorBrush x:Key="NavigationButton.MouseOver.Background" Color="Gray"/>
	<SolidColorBrush x:Key="NavigationButton.MouseOver.Border" Color="Transparent"/>
	<SolidColorBrush x:Key="NavigationButton.Pressed.Background" Color="DarkGray"/>
	<SolidColorBrush x:Key="NavigationButton.Pressed.Border" Color="Transparent"/>
	<SolidColorBrush x:Key="NavigationButton.Disabled.Background" Color="#FFF4F4F4"/>
	<SolidColorBrush x:Key="NavigationButton.Disabled.Border" Color="#FFADB2B5"/>
	<SolidColorBrush x:Key="NavigationButton.Disabled.Foreground" Color="#FF838383"/>

	<Style x:Key="FriendMenuNavigationButton" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FriendMenuButtonFocusVisual}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Grid>
						<Border x:Name="border" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="0,0,20,0">
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
									<GradientStop Offset="0" Color="#FF333333"/>
									<GradientStop Offset="1" Color="#FF888888"/>
								</LinearGradientBrush>
							</Border.Background>
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<Border Background="Transparent" BorderThickness="0,0,1,1" BorderBrush="Transparent" CornerRadius="0,0,10,0"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Button.IsDefaulted" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource NavigationButton.Static.Border}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
							<Setter Property="Background" TargetName="border" Value="{StaticResource NavigationButton.MouseOver.Background}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource NavigationButton.Pressed.Border}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource NavigationButton.Static.Border}"/>
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource NavigationButton.Disabled.Foreground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>